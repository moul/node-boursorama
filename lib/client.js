// Generated by CoffeeScript 1.6.3
(function() {
  var Browser, EventEmitter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  EventEmitter = require('events').EventEmitter;

  Browser = require('./browser').Browser;

  module.exports.Client = (function(_super) {
    __extends(Client, _super);

    function Client(options) {
      var _this = this;
      this.options = options != null ? options : {};
      this.go = __bind(this.go, this);
      this.debug = __bind(this.debug, this);
      this.debug('constructor');
      this.options.base_url = 'https://www.boursorama.com/';
      this.browser = new Browser(this.options);
      this.browser.on('ready', function() {
        _this.debug('ready');
        _this.emit('ready');
        return _this.browser.open('');
      });
    }

    Client.prototype.debug = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (this.options.verbose) {
        return console.log.apply(console, ["Client>"].concat(__slice.call(args)));
      }
    };

    Client.prototype.go = function(path) {
      return this.browser.open(path);
    };

    return Client;

  })(EventEmitter);

}).call(this);
